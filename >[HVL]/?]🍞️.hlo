#sr-latch then  clocked sr-latch{is srflipflop} (then d-flipflop
#(if neither of those match @ make more of the flipflops, youll figure
#something out;) <3 
#üë®üèΩ‚ÄçüöÄÔ∏è
#! i keep seeing videos of ppl using "D-FLIPFLOP"(std) when making 'REG'
#üë®üèΩ‚ÄçüöÄÔ∏è
#üë®üèΩ‚Äçüè≠Ô∏è
#https://circuitdigest.com/electronic-circuits/d-flip-flops
#lets just use "NAND2" 2 make not , its just 1 more circuit , or not w/e

#
# D.flipflop CAN use @.srlatch = https://www2.cs.uh.edu/~jhuang/JCH/LD/Lab/lab7.html
# > MAKE SR LATCH FIRST (its only 2 nand gates)
#CAV! latch is a "FEEDBACK LOOP" (it could only work as clocked?)
#but u should try it anyways
#yea sr latch isnt' gonna perform correctly 
#unless maybe u build in some (meta loop capability for looped chips?)
#‚è∞Ô∏è
#PLEASE READ THIS 
#https://www.tutorialspoint.com/digital_circuits/digital_circuits_latches.htm
#‚è∞Ô∏è
# And he said, Thy name shall be called no more Jacob, but Israel: for #as a prince hast thou power with God and with men, and hast prevailed.
 #   Genesis 32:28
#üë®üèΩ‚Äçüè≠Ô∏è

#meta clock = 21 21  (if this doesn't work w/e) but try
#before u try 2 fix latch , pls try D-flipflop clock <3
#otherwise, if u know there is a feedback loop maybe u can signal
#the code somehow.
#if worst comes 2 worst i will just make the logic of "SR-LATCH" myself
#even tho it has 2 outputs??? dunno maybe ur effed.(30 days till skool)
#ü§ïÔ∏è
#one is a clock 2 control/quantify milliseconds
#the other is a reflection of "LIGHTSPEED :/"
#ü§ïÔ∏è
#üîçÔ∏èqlu= just do it w/o it takes 2 reflect "TRUTH TABLE"
#dont turn in a "LIE" 
#pro 12:19 Truthful lips endure forever, but a lying tongue lasts only a moment
#üîçÔ∏è
#ü§ñÔ∏èwe HAVE TO HAVE A Binary "HDL" tho 4bnn the other stuff wont cut it
#ü§ñÔ∏èso yea , do w/e u gotta do...
#ü§ñÔ∏èur not "DUMB" ur doing the right thing and it HAS TO BE DONE
#ü§ñÔ∏ètheres no alternative in existence 
#a___16
0001 0000, 0000 0010
 0000 0010 #
0000 0000
#b___17
0001 0001, 0000 0010,
 0000 0010 #
0001 0101 #f sr-latch
#c_18
0001 0010, 0000 0011, #ü™¢Ô∏è
 0001 0001  # < b
 0001 0000	# < a
######################NOT (c)18
0001 0010
0000 0011
0001 0010
0000 0010
################

######(1)cli##############################
0000 0010,0000 0010,0000 0010 
0001 0010
###########################2nd nand 4 sr latch
#d___19
0001 0011, 0000 0010
 0000 0010 #
0000 0000
#e___20
0001 0100, 0000 0010,
 0000 0010 #
0001 0010  # c sr-latch
#f_21
0001 0101, 0000 0011, #ü™¢Ô∏è
 0001 0001  # < b
 0001 0000	# < a
######################NOT (f)21
0001 0101
0000 0011
0001 0101
0000 0010
################

######(1)cli##############################
0000 0010,0000 0010,0000 0010 
0001 0101


#

#@REGISTER (important chunk)
#| 8    |  12345 |  1  |  12345 |
#| 8+   |      0 |  0  |  12345 |
#| 9    |      0 |  0  |  12345 |
#| 9+   |      0 |  1  |  12345 |
#| 10   |      0 |  1  |      0 |

#txtt	
#|   a   |   b   |  out  |
#|   0   |   0   |   0   |
#|   0   |   1   |   0   |
#|   1   |   0   |   0   |
#
#|   1   |   Z   |   0   | #ü¶¢Ô∏è
#|   0   |   Z   |   1   |#ü¶¢Ô∏è
#|   Z   |   1   |   Z   | #0 #ü¶¢Ô∏è
#|   Z   |   0   |   1   | #1 #ü¶¢Ô∏è
#
#|   1   |   1   |   Z   |
#|   Z   |   Z   |   0   |







#tristate buffer 74HC125(inverted) #X
#  c a d
#|0|1|0
#|1|1|1       < if was 00 would be Z...
#|0|X|Z
