#ЁЯФШя╕П#ЁЯФШя╕П#ЁЯФШя╕П#ЁЯФШя╕П#ЁЯФШя╕П
#clock	= 16
0001 0000, 0000 0100, 0000 0011 0000 0011
#switch_0 = 17
0001 0001, 0000 0101,0000 0011 0000 0011
#
#switch_1 = 18
0001 0010, 0000 0110, 0000 0011 0000 0011



#CLI BOTH

######################
#ЁЯЧУя╕П#ЁЯУЕя╕Пmux1 then DFF = BIT ...GO! 
#cli chip entry ? 

#/**
# * Multiplexor:
# * out = a if sel == 0
# *       b otherwise
# */

#CHIP Mux {
#    IN a, b, sel;
#    OUT out;

#ЁЯкбя╕П19 = a in 
#0001 0011   0000 00110000 0011 , 0000 000?
#ЁЯкбя╕П20 = b in 
#0001 0100   0000 00110000 0011 , 0000 000?
#ЁЯкбя╕П18 = sel in 
#0001 0101  0000 00110000 0011 , 0000 0001
#ЁЯкбя╕П19 = out
#0001 0110  0000 00110000 0011 , 0000 000?


#    PARTS:

#    Not(in=sel, out=Notsel);
#ЁЯкбя╕П20 = Notsel
#0001 0100  0000 1000 0000 0011 , 0001 0101


 #   And(a=a, b=Notsel, out=NotselAnda);
  #  And(a=b, b=sel, out=selAndb);

   # Or(a=NotselAnda, b=selAndb, out=out);
#}

#
#|   a   |   b   |  sel  |  out  |
#|   0   |   0   |   0   |   0   |
#|   0   |   0   |   1   |   0   |
#|   0   |   1   |   0   |   0   |
#|   0   |   1   |   1   |   1   |
#|   1   |   0   |   0   |   1   |
#|   1   |   0   |   1   |   0   |
#|   1   |   1   |   0   |   1   |
#|   1   |   1   |   1   |   1   |

 
#ЁЯЧУя╕П

#################

#CLI BOTH
#0000 0011 0000 00110000 0011,0001 0000,
#0000 0011 0000 00110000 0011,0001 0001,




#FF++

#txtt	
#|   a   |   b   |  out  |
#|   0   |   0   |   0   |
#|   0   |   1   |   0   |
#|   1   |   0   |   0   |

#
#|   1   |   Z   |   0   | #ЁЯжвя╕П
#|   0   |   Z   |   1   |#ЁЯжвя╕П

#|   Z   |   1   |   Z   | #0 #ЁЯжвя╕П
#|   Z   |   0   |   1   | #1 #ЁЯжвя╕П
#
#|   1   |   1   |   Z   |
#|   Z   |   Z   |   0   |
##ЁЯЪмя╕П
#w8ing 4 3sv/@/nunq check
##ЁЯЪмя╕П##ЁЯЪмя╕П##ЁЯЪмя╕П##ЁЯЪмя╕П##ЁЯЪмя╕П##ЁЯЪмя╕П##ЁЯЪмя╕П##ЁЯЪмя╕П##ЁЯЪмя╕П##ЁЯЪмя╕П##ЁЯЪмя╕П##ЁЯЪмя╕П
#ЁЯЪмя╕П)ЁЯЪмя╕П)ЁЯЪмя╕П)ЁЯЪмя╕П)ЁЯЪмя╕П)ЁЯЪмя╕П)ЁЯЪмя╕П)ЁЯЪмя╕П)ЁЯЪмя╕П)ЁЯЪмя╕П)
#|   3   |   3   |   2   | #trying 2 go for opposite of hi-z<no ЁЯУоя╕П( stepper?)
#A
#|   3   |   0   |   1   | 
#|   3   |   1   |   0   | 



#|   0   |   3   |   1   |  #assuming an imput from 1 ? (can change 
#|   1   |   3   |   0   | 


#|   3   |   Z   |   0   |  < can use these for input stepper up/ down) ЁЯУоя╕П
#B                        #(ЁЯЪмя╕П)start assuming (3rd leg input) based on needed fx 
#|   Z   |   3   |   0   | 
#_ЁЯЪмя╕П_)ЁЯЪмя╕П_)ЁЯЪмя╕П_)ЁЯЪмя╕П_)ЁЯЪмя╕П_)ЁЯЪмя╕П_)ЁЯЪмя╕П_)

#@++
#|   a   |   b   |  out  |
#|   0   |   0   |   1   |
#|   0   |   1   |   1   |  # = high z out. 
#|   1   |   0   |   1   |  # = GOOD 
#|   1   |   1   |   0   |




#тЭгя╕Пmake sure u read the "TT"S write some have a on left, some on right ;) 
#tristate buffer 74HC126(non-inverted) #X
#  c a d
#|0|1|1    Z & 1 = Z =zc0  =1
#|0|0|0    Z & 0 = 1 = 1c0 =0 
#|1|0|Z    Z & 0 = 1 = 1c1 =Z  
#|1|1|Z	   Z & 1 = Z =zc1  =Z   

##if it expected z in it would say on both sides ;)
	

#tristate buffer 74HC125(inverted) #X
#  c a d
#|0|1|0
#|1|1|1       < if was 00 would be Z...
#|0|X|Z
